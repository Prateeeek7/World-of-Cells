{"version":3,"file":"static/js/712.90cd0a7c.chunk.js","mappings":"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","sources":["pages/CellPage.jsx"],"sourcesContent":["import React, { useEffect, useState, useMemo, useCallback } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport ReactMarkdown from \"react-markdown\";\n\n// Helper function to convert array or comma-separated string to proper markdown format\nconst formatMarkdownContent = (content) => {\n  if (!content) return 'Unknown';\n  \n  // If it's an array, join with periods and capitalize first letter\n  if (Array.isArray(content)) {\n    const joined = content.join('. ').trim();\n    return joined.charAt(0).toUpperCase() + joined.slice(1) + (joined.endsWith('.') ? '' : '.');\n  }\n  \n  // If it's a string with commas, convert to sentences\n  if (typeof content === 'string' && content.includes(',')) {\n    const sentences = content.split(',').map(item => item.trim()).join('. ');\n    return sentences.charAt(0).toUpperCase() + sentences.slice(1) + (sentences.endsWith('.') ? '' : '.');\n  }\n  \n  // Clean up any existing formatting and ensure proper capitalization\n  if (typeof content === 'string') {\n    const cleaned = content.trim();\n    return cleaned.charAt(0).toUpperCase() + cleaned.slice(1);\n  }\n  \n  return content;\n};\nimport cellsData from \"../data/cells.json\";\nimport { useTheme } from \"../contexts/ThemeContext\";\nimport OptimizedImage from \"../components/OptimizedImage\";\nimport CellAI from \"../components/CellAI\";\n\nconst CellPage = () => {\n  const { cellName } = useParams();\n  const [cell, setCell] = useState(null);\n  const [showCellAI, setShowCellAI] = useState(false);\n  const navigate = useNavigate();\n  const { isDarkMode } = useTheme();\n\n  // Memoize the normalized cell name to prevent recalculation\n  const normalizedCellName = useMemo(() => \n    cellName.replace(/-/g, ' ').toLowerCase(), \n    [cellName]\n  );\n\n  // Memoize the cell search to prevent recalculation on every render\n  const foundCell = useMemo(() => {\n    // First try exact match\n    let cell = cellsData.find(c => c.name.toLowerCase() === normalizedCellName);\n    \n    // If not found, try more flexible matching\n    if (!cell) {\n      cell = cellsData.find(c => {\n        const cellNameLower = c.name.toLowerCase();\n        const searchName = normalizedCellName;\n        \n        // Handle special characters and variations\n        const normalizedCellNameFlexible = cellNameLower\n          .replace(/[()]/g, '') // Remove parentheses\n          .replace(/\\s+/g, ' ') // Normalize spaces\n          .trim();\n        \n        const searchNameFlexible = searchName\n          .replace(/[()]/g, '') // Remove parentheses\n          .replace(/\\s+/g, ' ') // Normalize spaces\n          .trim();\n        \n        // Additional check: handle the case where URL removes parentheses but JSON keeps them\n        // Try matching by removing all special characters and comparing core words\n        const coreWords1 = normalizedCellNameFlexible\n          .replace(/[^a-z0-9\\s]/g, '') // Remove all special chars except spaces\n          .split(/\\s+/)\n          .filter(word => word.length > 0)\n          .sort()\n          .join(' ');\n          \n        const coreWords2 = searchNameFlexible\n          .replace(/[^a-z0-9\\s]/g, '') // Remove all special chars except spaces\n          .split(/\\s+/)\n          .filter(word => word.length > 0)\n          .sort()\n          .join(' ');\n        \n        // Try both methods\n        const exactMatch = normalizedCellNameFlexible === searchNameFlexible;\n        const coreMatch = coreWords1 === coreWords2;\n        \n        return exactMatch || coreMatch;\n      });\n    }\n    \n    return cell;\n  }, [normalizedCellName]);\n\n  useEffect(() => {\n    setCell(foundCell);\n  }, [foundCell]);\n\n  // Mapping function to convert cells.json group names to URL group names\n  const getGroupUrl = useCallback((groupName) => {\n    // Normalize the group name to lowercase and handle special characters\n    const normalizedGroup = groupName.toLowerCase().replace(/[&]/g, ' and ').replace(/\\s+/g, ' ');\n    \n    // Direct mapping to GroupPage group names\n    const groupMapping = {\n      \"epithelial\": \"epithelial\",\n      \"muscular\": \"muscular\", \n      \"nervous and sensory\": \"nervous and sensory\",\n      \"hematopoietic\": \"hematopoietic\",\n      \"stem and progenitory\": \"stem & progenitory\",\n      \"connective\": \"connective\",\n      \"reproductive\": \"reproductive\",\n      \"skeletal\": \"skeletal\",\n      \"gastrointestinal\": \"gastrointestinal\",\n      \"thoracic\": \"thoracic\",\n      \"secretory and hormone\": \"secretory & hormone\",\n      \"immune\": \"immune\"\n    };\n    \n    // Return the mapped group or null if not found\n    return groupMapping[normalizedGroup] || null;\n  }, []);\n\n  // Memoize event handlers to prevent recreation on every render\n  const handleBackClick = useCallback(() => {\n    if (cell && cell.group) {\n      const groupUrl = getGroupUrl(cell.group);\n      // If no valid group found, go to homepage\n      if (groupUrl === null) {\n        navigate('/');\n      } else {\n        navigate(`/group/${groupUrl}`);\n      }\n    } else {\n      navigate('/');\n    }\n  }, [navigate, cell, getGroupUrl]);\n\n  if (!cell) {\n    return (\n      <div className={`min-h-screen flex flex-col items-center p-4 pb-16 ${\n        isDarkMode ? \"bg-gray-900 text-white\" : \"bg-gray-100 text-gray-900\"\n      }`}>\n        <h1 className=\"text-4xl font-bold mb-4 capitalize\">{cellName.replace(/-/g, ' ')}</h1>\n        <p className={isDarkMode ? \"text-gray-300\" : \"text-gray-600\"}>Loading or cell not found.</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className={`min-h-screen p-0 ${\n      isDarkMode ? \"bg-gray-900 text-white\" : \"bg-gray-100 text-gray-900\"\n    }`}>\n      <div\n        className=\"min-h-screen border-[12px] border-[#5a2328] box-border p-4 md:p-8\"\n        style={{ borderRadius: '24px', margin: '2px 0' }}\n      >\n        {/* Back button */}\n        <div className=\"w-full flex justify-start mt-8 md:mt-8\">\n          <button\n            onClick={handleBackClick}\n            className=\"bg-[#5a2328] hover:bg-[#43181c] text-white font-bold rounded-full shadow-lg focus:outline-none focus:ring-2 focus:ring-[#7a3b3f] transition-all duration-200 flex items-center justify-center text-2xl mb-4 ml-2 md:ml-8\n              w-11 h-11 md:w-[44px] md:h-[44px]\"\n            aria-label={cell && cell.group ? \"Back to Group\" : \"Back to Home\"}\n            style={{ minWidth: '2.5rem', minHeight: '2.5rem' }}\n          >\n            <span className=\"flex items-center justify-center w-full h-full\">&#8592;</span>\n          </button>\n        </div>\n        <h1 className=\"text-4xl font-bold mb-4 capitalize text-center\">{cell.name}</h1>\n        {cell.image && (\n          <div className=\"flex flex-col items-center\">\n            <OptimizedImage\n              src={cell.image}\n              alt={cell.name + ' diagram'}\n              className=\"w-96 h-96 md:w-[32rem] md:h-[32rem] object-contain rounded shadow mb-0\"\n            />\n            \n            {/* Simple Image Description and Reference */}\n            {(cell.image_description || cell.image_reference) && (\n              <div className={`max-w-2xl text-center px-4 py-2 rounded-lg mb-12 ${\n                isDarkMode \n                  ? \"bg-gray-800/50 border border-gray-600\" \n                  : \"bg-gray-100/50 border border-gray-300\"\n              }`}>\n                {cell.image_description && (\n                  <p className={`text-sm italic mb-2 ${\n                    isDarkMode ? \"text-gray-300\" : \"text-gray-600\"\n                  }`}>\n                    {cell.image_description}\n                  </p>\n                )}\n                {cell.image_reference && cell.image_reference.length > 0 && (\n                  <div className=\"space-y-1\">\n                    {cell.image_reference.map((ref, index) => (\n                      <p key={index} className={`text-xs italic ${\n                        isDarkMode ? \"text-gray-400\" : \"text-gray-500\"\n                      }`}>\n                        {ref.url ? (\n                          <a \n                            href={ref.url} \n                            target=\"_blank\" \n                            rel=\"noopener noreferrer\"\n                            className=\"hover:underline\"\n                          >\n                            {ref.source}\n                          </a>\n                        ) : (\n                          ref.source\n                        )}\n                      </p>\n                    ))}\n                  </div>\n                )}\n              </div>\n            )}\n          </div>\n        )}\n        <div className=\"max-w-[96rem] space-y-10 px-2 md:px-10 lg:px-20 mx-auto\">\n          <section>\n            <h2 className=\"text-2xl font-semibold mb-2\">Embryonic Origin</h2>\n            <div className={`text-lg md:text-xl leading-relaxed ${\n              isDarkMode ? \"text-gray-200\" : \"text-gray-700\"\n            }`}>\n              <ReactMarkdown \n                components={{\n                  strong: ({children}) => <strong className=\"font-bold\">{children}</strong>,\n                  em: ({children}) => <em className=\"italic\">{children}</em>,\n                  code: ({children}) => <code className=\"bg-gray-200 dark:bg-gray-700 px-1 py-0.5 rounded text-sm font-mono\">{children}</code>,\n                  p: ({children}) => <p className=\"mb-3 leading-relaxed\">{children}</p>,\n                  ul: ({children}) => <ul className=\"mb-3 pl-4 space-y-1\">{children}</ul>,\n                  ol: ({children}) => <ol className=\"mb-3 pl-4 space-y-1\">{children}</ol>,\n                  li: ({children}) => <li className=\"leading-relaxed\">{children}</li>\n                }}\n              >\n                {formatMarkdownContent(cell.embryonic_origin)}\n              </ReactMarkdown>\n            </div>\n          </section>\n          <section>\n            <h2 className=\"text-2xl font-semibold mb-2\">Discovery</h2>\n            <p className={isDarkMode ? \"text-gray-200\" : \"text-gray-700\"}>\n              <span className=\"font-semibold\">Scientist:</span> {cell.discovery?.scientist || 'Unknown'}<br />\n              <span className=\"font-semibold\">Year:</span> {cell.discovery?.year || 'Unknown'}<br />\n              <span className=\"font-semibold\">Stain:</span> {cell.discovery?.stain || 'Unknown'}\n            </p>\n          </section>\n          <section>\n            <h2 className=\"text-2xl font-semibold mb-2\">Location</h2>\n            <div className={`${isDarkMode ? \"text-gray-200\" : \"text-gray-700\"}`}>\n              <ReactMarkdown \n                components={{\n                  strong: ({children}) => <strong className=\"font-bold\">{children}</strong>,\n                  em: ({children}) => <em className=\"italic\">{children}</em>,\n                  code: ({children}) => <code className=\"bg-gray-200 dark:bg-gray-700 px-1 py-0.5 rounded text-sm font-mono\">{children}</code>,\n                  p: ({children}) => <p className=\"mb-3 leading-relaxed\">{children}</p>,\n                  ul: ({children}) => <ul className=\"mb-3 pl-4 space-y-1\">{children}</ul>,\n                  ol: ({children}) => <ol className=\"mb-3 pl-4 space-y-1\">{children}</ol>,\n                  li: ({children}) => <li className=\"leading-relaxed\">{children}</li>\n                }}\n              >\n                {formatMarkdownContent(cell.location)}\n              </ReactMarkdown>\n            </div>\n          </section>\n          <section>\n            <h2 className=\"text-2xl font-semibold mb-2\">Function</h2>\n            <div className={`${isDarkMode ? \"text-gray-200\" : \"text-gray-700\"}`}>\n              <ReactMarkdown \n                components={{\n                  strong: ({children}) => <strong className=\"font-bold\">{children}</strong>,\n                  em: ({children}) => <em className=\"italic\">{children}</em>,\n                  code: ({children}) => <code className=\"bg-gray-200 dark:bg-gray-700 px-1 py-0.5 rounded text-sm font-mono\">{children}</code>,\n                  p: ({children}) => <p className=\"mb-3 leading-relaxed\">{children}</p>,\n                  ul: ({children}) => <ul className=\"mb-3 pl-4 space-y-1\">{children}</ul>,\n                  ol: ({children}) => <ol className=\"mb-3 pl-4 space-y-1\">{children}</ol>,\n                  li: ({children}) => <li className=\"leading-relaxed\">{children}</li>\n                }}\n              >\n                {formatMarkdownContent(cell.function)}\n              </ReactMarkdown>\n            </div>\n          </section>\n          <section>\n            <h2 className=\"text-2xl font-semibold mb-2\">Life Span</h2>\n            <div className={`${isDarkMode ? \"text-gray-200\" : \"text-gray-700\"}`}>\n              <ReactMarkdown \n                components={{\n                  strong: ({children}) => <strong className=\"font-bold\">{children}</strong>,\n                  em: ({children}) => <em className=\"italic\">{children}</em>,\n                  code: ({children}) => <code className=\"bg-gray-200 dark:bg-gray-700 px-1 py-0.5 rounded text-sm font-mono\">{children}</code>,\n                  p: ({children}) => <p className=\"mb-3 leading-relaxed\">{children}</p>,\n                  ul: ({children}) => <ul className=\"mb-3 pl-4 space-y-1\">{children}</ul>,\n                  ol: ({children}) => <ol className=\"mb-3 pl-4 space-y-1\">{children}</ol>,\n                  li: ({children}) => <li className=\"leading-relaxed\">{children}</li>\n                }}\n              >\n                {formatMarkdownContent(cell.life_span)}\n              </ReactMarkdown>\n            </div>\n          </section>\n          <section>\n            <h2 className=\"text-2xl font-semibold mb-2\">Adherent</h2>\n            <div className={`${isDarkMode ? \"text-gray-200\" : \"text-gray-700\"}`}>\n              <ReactMarkdown \n                components={{\n                  strong: ({children}) => <strong className=\"font-bold\">{children}</strong>,\n                  em: ({children}) => <em className=\"italic\">{children}</em>,\n                  code: ({children}) => <code className=\"bg-gray-200 dark:bg-gray-700 px-1 py-0.5 rounded text-sm font-mono\">{children}</code>,\n                  p: ({children}) => <p className=\"mb-3 leading-relaxed\">{children}</p>,\n                  ul: ({children}) => <ul className=\"mb-3 pl-4 space-y-1\">{children}</ul>,\n                  ol: ({children}) => <ol className=\"mb-3 pl-4 space-y-1\">{children}</ol>,\n                  li: ({children}) => <li className=\"leading-relaxed\">{children}</li>\n                }}\n              >\n                {formatMarkdownContent(cell.adherent)}\n              </ReactMarkdown>\n            </div>\n          </section>\n          <section>\n            <h2 className=\"text-2xl font-semibold mb-2\">Effect of Ageing</h2>\n            <div className={`${isDarkMode ? \"text-gray-200\" : \"text-gray-700\"}`}>\n              <ReactMarkdown \n                components={{\n                  strong: ({children}) => <strong className=\"font-bold\">{children}</strong>,\n                  em: ({children}) => <em className=\"italic\">{children}</em>,\n                  code: ({children}) => <code className=\"bg-gray-200 dark:bg-gray-700 px-1 py-0.5 rounded text-sm font-mono\">{children}</code>,\n                  p: ({children}) => <p className=\"mb-3 leading-relaxed\">{children}</p>,\n                  ul: ({children}) => <ul className=\"mb-3 pl-4 space-y-1\">{children}</ul>,\n                  ol: ({children}) => <ol className=\"mb-3 pl-4 space-y-1\">{children}</ol>,\n                  li: ({children}) => <li className=\"leading-relaxed\">{children}</li>\n                }}\n              >\n                {formatMarkdownContent(cell.effect_of_ageing)}\n              </ReactMarkdown>\n            </div>\n          </section>\n          <section>\n            <h2 className=\"text-2xl font-semibold mb-2\">Related Disease</h2>\n            <div className={`${isDarkMode ? \"text-gray-200\" : \"text-gray-700\"}`}>\n              <ReactMarkdown \n                components={{\n                  strong: ({children}) => <strong className=\"font-bold\">{children}</strong>,\n                  em: ({children}) => <em className=\"italic\">{children}</em>,\n                  code: ({children}) => <code className=\"bg-gray-200 dark:bg-gray-700 px-1 py-0.5 rounded text-sm font-mono\">{children}</code>,\n                  p: ({children}) => <p className=\"mb-3 leading-relaxed\">{children}</p>,\n                  ul: ({children}) => <ul className=\"mb-3 pl-4 space-y-1\">{children}</ul>,\n                  ol: ({children}) => <ol className=\"mb-3 pl-4 space-y-1\">{children}</ol>,\n                  li: ({children}) => <li className=\"leading-relaxed\">{children}</li>\n                }}\n              >\n                {formatMarkdownContent(cell.related_disease)}\n              </ReactMarkdown>\n            </div>\n          </section>\n          <section>\n            <h2 className=\"text-2xl font-semibold mb-2\">History of Evolution</h2>\n            <div className={`${isDarkMode ? \"text-gray-200\" : \"text-gray-700\"}`}>\n              <ReactMarkdown \n                components={{\n                  strong: ({children}) => <strong className=\"font-bold\">{children}</strong>,\n                  em: ({children}) => <em className=\"italic\">{children}</em>,\n                  code: ({children}) => <code className=\"bg-gray-200 dark:bg-gray-700 px-1 py-0.5 rounded text-sm font-mono\">{children}</code>,\n                  p: ({children}) => <p className=\"mb-3 leading-relaxed\">{children}</p>,\n                  ul: ({children}) => <ul className=\"mb-3 pl-4 space-y-1\">{children}</ul>,\n                  ol: ({children}) => <ol className=\"mb-3 pl-4 space-y-1\">{children}</ol>,\n                  li: ({children}) => <li className=\"leading-relaxed\">{children}</li>\n                }}\n              >\n                {formatMarkdownContent(cell.history_of_evolution)}\n              </ReactMarkdown>\n            </div>\n          </section>\n          <section>\n            <h2 className=\"text-2xl font-semibold mb-2\">Relevance to Tissue Development</h2>\n            <div className={`${isDarkMode ? \"text-gray-200\" : \"text-gray-700\"}`}>\n              <ReactMarkdown \n                components={{\n                  strong: ({children}) => <strong className=\"font-bold\">{children}</strong>,\n                  em: ({children}) => <em className=\"italic\">{children}</em>,\n                  code: ({children}) => <code className=\"bg-gray-200 dark:bg-gray-700 px-1 py-0.5 rounded text-sm font-mono\">{children}</code>,\n                  p: ({children}) => <p className=\"mb-3 leading-relaxed\">{children}</p>,\n                  ul: ({children}) => <ul className=\"mb-3 pl-4 space-y-1\">{children}</ul>,\n                  ol: ({children}) => <ol className=\"mb-3 pl-4 space-y-1\">{children}</ol>,\n                  li: ({children}) => <li className=\"leading-relaxed\">{children}</li>\n                }}\n              >\n                {formatMarkdownContent(cell.relevance_to_tissue_development)}\n              </ReactMarkdown>\n            </div>\n          </section>\n          <section>\n            <h2 className=\"text-2xl font-semibold mb-2\">Tissue Engineering Research</h2>\n            <div className={`${isDarkMode ? \"text-gray-200\" : \"text-gray-700\"}`}>\n              <ReactMarkdown \n                components={{\n                  strong: ({children}) => <strong className=\"font-bold\">{children}</strong>,\n                  em: ({children}) => <em className=\"italic\">{children}</em>,\n                  code: ({children}) => <code className=\"bg-gray-200 dark:bg-gray-700 px-1 py-0.5 rounded text-sm font-mono\">{children}</code>,\n                  p: ({children}) => <p className=\"mb-3 leading-relaxed\">{children}</p>,\n                  ul: ({children}) => <ul className=\"mb-3 pl-4 space-y-1\">{children}</ul>,\n                  ol: ({children}) => <ol className=\"mb-3 pl-4 space-y-1\">{children}</ol>,\n                  li: ({children}) => <li className=\"leading-relaxed\">{children}</li>\n                }}\n              >\n                {formatMarkdownContent(cell.tissue_engineering_research)}\n              </ReactMarkdown>\n            </div>\n          </section>\n\n          {/* References Section */}\n          <section className=\"border-t pt-8\">\n            <h2 className=\"text-2xl font-semibold mb-6 text-[#5a2328]\">References & Further Reading</h2>\n            \n            {/* Individual Cell Links Section */}\n            <div className={`p-6 rounded-xl border-2 ${\n              isDarkMode \n                ? \"bg-gray-800 border-gray-600\" \n                : \"bg-gray-50 border-gray-200\"\n            }`}>\n              <h3 className=\"text-lg font-semibold mb-4 text-[#5a2328] flex items-center gap-2\">\n                <svg className=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                  <path d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n                </svg>\n                Curated Research Links for {cell.name}\n              </h3>\n              <p className={`text-sm mb-4 ${isDarkMode ? \"text-gray-300\" : \"text-gray-600\"}`}>\n                Hand-picked research papers, articles, and resources specifically about {cell.name.toLowerCase()}\n              </p>\n              \n              {/* Scrollable Links Container */}\n              <div className={`max-h-64 overflow-y-auto pr-2 ${\n                isDarkMode ? \"scrollbar-dark\" : \"scrollbar-light\"\n              }`}>\n                <div className=\"space-y-3\">\n                  {cell.references && cell.references.length > 0 ? (\n                    cell.references.map((reference, index) => (\n                      <div key={index} className={`p-3 rounded-lg border ${\n                        isDarkMode \n                          ? \"bg-gray-700 border-gray-500 hover:bg-gray-600\" \n                          : \"bg-white border-gray-200 hover:bg-gray-50\"\n                      } transition-colors`}>\n                        <a \n                          href={reference.url} \n                          target=\"_blank\" \n                          rel=\"noopener noreferrer\"\n                          className=\"block\"\n                        >\n                          <div className=\"flex items-start justify-between\">\n                            <div className=\"flex-1\">\n                              <p className={`font-medium text-sm ${isDarkMode ? \"text-white\" : \"text-gray-900\"}`}>\n                                {reference.title}\n                              </p>\n                              <p className={`text-xs mt-1 ${isDarkMode ? \"text-gray-400\" : \"text-gray-600\"}`}>\n                                {reference.source} • {reference.year} • {reference.type}\n                              </p>\n                            </div>\n                            <svg className=\"w-4 h-4 mt-1 text-[#5a2328] flex-shrink-0\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                              <path fillRule=\"evenodd\" d=\"M10.293 3.293a1 1 0 011.414 0l6 6a1 1 0 010 1.414l-6 6a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-4.293-4.293a1 1 0 010-1.414z\" clipRule=\"evenodd\"/>\n                            </svg>\n                          </div>\n                        </a>\n                      </div>\n                    ))\n                  ) : (\n                    <div className={`p-4 text-center ${isDarkMode ? \"text-gray-400\" : \"text-gray-500\"}`}>\n                      <p className=\"text-sm\">No specific references available for {cell.name} yet.</p>\n                      <p className=\"text-xs mt-1\">Check back later for curated research links.</p>\n                    </div>\n                  )}\n                </div>\n              </div>\n            </div>\n          </section>\n\n          {/* Call to Action */}\n          <div className={`mt-8 p-6 rounded-xl text-center ${\n            isDarkMode \n              ? \"bg-gray-800 border border-gray-600\" \n              : \"bg-gray-50 border border-gray-300\"\n          }`}>\n            <h3 className=\"text-lg font-semibold mb-3 text-[#5a2328]\">Want to Learn More?</h3>\n            <p className={`mb-4 ${isDarkMode ? \"text-gray-300\" : \"text-gray-600\"}`}>\n              Explore the latest research on {cell.name.toLowerCase()} and related cell types\n            </p>\n            <div className=\"flex flex-wrap justify-center gap-3\">\n              <button \n                onClick={() => window.open(`https://pubmed.ncbi.nlm.nih.gov/?term=${encodeURIComponent(cell.name)}`, '_blank')}\n                className=\"px-4 py-2 bg-[#5a2328] hover:bg-[#43181c] text-white rounded-lg transition-colors text-sm font-medium\"\n              >\n                Search PubMed for {cell.name}\n              </button>\n              <button \n                onClick={() => window.open(`https://www.google.com/search?q=${encodeURIComponent(cell.name + ' cell biology research')}`, '_blank')}\n                className=\"px-4 py-2 bg-gray-600 hover:bg-gray-700 text-white rounded-lg transition-colors text-sm font-medium\"\n              >\n                Search Web for {cell.name}\n              </button>\n              <button \n                onClick={() => navigate(`/group/${cell.group?.toLowerCase()}`)}\n                className=\"px-4 py-2 bg-green-600 hover:bg-green-700 text-white rounded-lg transition-colors text-sm font-medium\"\n              >\n                View {cell.group} Cell Group\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Floating Chatbot Button */}\n      <div className=\"fixed bottom-4 right-4 sm:bottom-6 sm:right-6 z-40\">\n        <div className=\"relative group\">\n          {/* Tagline Popup */}\n          <div className=\"absolute bottom-full right-0 mb-2 opacity-0 group-hover:opacity-100 transition-opacity duration-300 pointer-events-none hidden sm:block\">\n            <div className=\"bg-white dark:bg-gray-800 text-gray-900 dark:text-white px-3 py-2 rounded-lg shadow-lg text-sm whitespace-nowrap border border-gray-200 dark:border-gray-700\">\n              Ask me about {cell?.name || 'cells'}! 🧬\n              <div className=\"absolute top-full right-4 w-0 h-0 border-l-4 border-r-4 border-t-4 border-transparent border-t-white dark:border-t-gray-800\"></div>\n            </div>\n          </div>\n          \n          {/* Chatbot Button */}\n          <button\n            onClick={() => {\n              console.log('CellAI button clicked');\n              setShowCellAI(true);\n            }}\n            className=\"w-14 h-14 sm:w-16 sm:h-16 bg-gradient-to-r from-blue-500 to-blue-600 hover:from-blue-600 hover:to-blue-700 text-white rounded-full shadow-lg transition-all duration-300 flex items-center justify-center group-hover:scale-110 hover:shadow-xl chatbot-float chatbot-pulse\"\n            title=\"Cell-AI Chatbot\"\n          >\n            <img \n              src=\"/icons/ChatAI.png\" \n              alt=\"ChatAI\" \n              className=\"w-10 h-10 sm:w-12 sm:h-12 object-contain\"\n              onError={(e) => {\n                // Fallback to SVG if image fails to load\n                e.target.style.display = 'none';\n                e.target.nextSibling.style.display = 'block';\n              }}\n            />\n            <svg \n              width=\"32\" \n              height=\"32\" \n              viewBox=\"0 0 24 24\" \n              fill=\"none\" \n              xmlns=\"http://www.w3.org/2000/svg\"\n              className=\"hidden\"\n            >\n              <path d=\"M20 2H4C2.9 2 2 2.9 2 4V22L6 18H20C21.1 18 22 17.1 22 16V4C22 2.9 21.1 2 20 2ZM20 16H5.17L4 17.17V4H20V16Z\" fill=\"currentColor\"/>\n              <circle cx=\"8\" cy=\"10\" r=\"1\" fill=\"white\"/>\n              <circle cx=\"12\" cy=\"10\" r=\"1\" fill=\"white\"/>\n              <circle cx=\"16\" cy=\"10\" r=\"1\" fill=\"white\"/>\n            </svg>\n          </button>\n        </div>\n      </div>\n\n      <CellAI\n        onClose={() => setShowCellAI(false)}\n        isOpen={showCellAI}\n      />\n    </div>\n  );\n};\n\nexport default CellPage;\n\n"],"names":["formatMarkdownContent","content","Array","isArray","joined","join","trim","charAt","toUpperCase","slice","endsWith","includes","sentences","split","map","item","cleaned","CellPage","_cell$discovery","_cell$discovery2","_cell$discovery3","cellName","useParams","cell","setCell","useState","showCellAI","setShowCellAI","navigate","useNavigate","isDarkMode","useTheme","normalizedCellName","useMemo","replace","toLowerCase","foundCell","cellsData","find","c","name","cellNameLower","searchName","normalizedCellNameFlexible","searchNameFlexible","coreWords1","filter","word","length","sort","coreWords2","useEffect","getGroupUrl","useCallback","groupName","handleBackClick","group","groupUrl","_jsxs","className","children","style","borderRadius","margin","_jsx","onClick","minWidth","minHeight","image","OptimizedImage","src","alt","image_description","image_reference","ref","index","url","href","target","rel","source","ReactMarkdown","components","strong","em","code","p","ul","ol","li","embryonic_origin","discovery","scientist","year","stain","location","function","life_span","adherent","effect_of_ageing","related_disease","history_of_evolution","relevance_to_tissue_development","tissue_engineering_research","fill","viewBox","d","references","reference","title","type","fillRule","clipRule","window","open","encodeURIComponent","_cell$group","console","log","onError","e","display","nextSibling","width","height","xmlns","cx","cy","r","CellAI","onClose","isOpen"],"sourceRoot":""}